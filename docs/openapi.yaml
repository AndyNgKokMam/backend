openapi: '3.0.0'
info:
    version: 1.0.0
    title: Backend Coding Test
    description: Backend coding test for Xendit
    termsOfService: http://swagger.io/terms/
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
    - url: /
paths:
    /health:
        get:
            description: |
                Check health
            operationId: health
            responses:
                '200':
                    description: health response
                    content:
                        text/plain:
                            schema:
                                type: string
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /rides:
        get:
            description: |
                Returns all rides
            operationId: getRidesList
            parameters:
                - name: limit
                  in: query
                  description: limit number of results to return
                  required: false
                  schema:
                      type: integer
                      format: int32
                      minimum: 1
                      maximum: 20
                - name: after_id
                  in: query
                  description: after the id of the record
                  required: false
                  schema:
                      type: string
            responses:
                '200':
                    description: ride response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RidesListResponse'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            description: Creates a new ride in the database.
            operationId: addRide
            security:
                - ApiKeyAuth: []
            requestBody:
                description: Ride to add to the database
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Ride'
            responses:
                '200':
                    description: Ride response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Ride'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /rides/{id}:
        get:
            description: Returns a user based on a single ID
            operationId: find ride by id
            parameters:
                - name: id
                  in: path
                  description: ID of ride to fetch
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: ride response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Ride'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

components:
    schemas:
        Ride:
            required:
                - start_lat
                - start_long
                - end_lat
                - end_long
                - rider_name
                - driver_name
                - driver_vehicle
            properties:
                start_lat:
                    type: number
                start_long:
                    type: number
                end_lat:
                    type: number
                end_long:
                    type: number
                rider_name:
                    type: string
                driver_name:
                    type: string
                driver_vehicle:
                    type: string
                _id:
                    type: object
                created:
                    type: string
                    format: date-time

        NextResponse:
            required:
                - href
                - method
                - rel
            properties:
                href:
                    type: string
                method:
                    type: string
                rel:
                    type: string

        RidesListResponse:
            required:
                - has_more
                - data
                - links
            properties:
                has_more:
                    type: boolean
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/Ride'
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/NextResponse'

        Error:
            required:
                - message
            properties:
                message:
                    type: string
